name: Terraform Pipeline
on:
  # Pull request events (opened, updated, reopened) -> plan only
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]
  # Push events (merging into main) -> apply
  push:
    branches: [ "main" ]
env:
  AWS_REGION: "us-east-1"
  AWS_ROLE_ARN: "arn:aws:iam::ACCOUNT_ID:role/InfraTerraformRole"

jobs:
  plan:
    name: Terraform Plan (PR)
    runs-on: ubuntu-latest

    # Only run for pull_request events
    if: ${{ github.event_name == 'pull_request' }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

  apply:
    name: Terraform Apply (main)
    runs-on: ubuntu-latest

    # Only run on push to main (meaning the PR was merged)
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main') }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
